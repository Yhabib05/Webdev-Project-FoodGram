stages: 
  - lint 
  - test
  - deploy 
  - badges 



lint-html: # premier job pour html 
  stage: lint 
  tags:
    - docker 
  image: node:lts-alpine 
  script:
    - npm install htmlhint
    - npx htmlhint backend/src/frontend/index.html > lintes_report_html.txt
  artifacts: 
    paths:
      - ./*.txt
  when: always 

lint-css: # deuxieme job pour css 
  stage: lint 
  tags:
    - docker 
  image: node:lts-alpine 
  script:
    - npm install csslint-cli
    - npx csslint-cli backend/src/frontend/Exercice-50.css > lintes_report_css.txt
  artifacts: 
    paths:
      - ./*.txt
  when: always 

lint-js:
  stage: lint    # troisieme job lint-js
  tags: 
    - docker
  image: node
  before_script:
      - npm i
      - npm install eslint
  script:
      - npm install eslint --config standard
      - npm install eslint-plugin-cypress --save-dev
      - npx eslint Foodgram/Screens/*.js Foodgram/components/*.js --fix > lintes_report_js.txt 
  artifacts:
    when: always           
    paths:
      - ./*.txt


#jobcypress:
#  stage: test
#  tags: 
#    - docker
#  image: cypress/base:16.18.1
#  script:
#    - npm i       
#    - npx cypress install
#    - cd Foodgram
#    - npm install expo --legacy-peer-deps  
#    - export EXPO_AUTO_INSTALL=true
#    - CI=true npx expo start --tunnel 
#    - cd ../backend 
#    - npm install
#    - npm install --save-dev nodemon 
#    - npm run start &
#    - cd ..  
#    - npx cypress run 2>&1 | tee cypress_report.txt
#  artifacts: 
#    when: always
#    paths:
#      - cypress/videos/*.mp4
#      - cypress_report.txt


pages:
  stage: deploy
  tags:
    - docker
  image: sebastienviardot/rnenvsv:buster
  script:
  - chmod +x genereapk.sh
  - ./genereapk.sh
  artifacts:
    paths:
      - public/

badges:                 # troisieme stage badges wich will creat the badge "Test_lint"

  stage: badges    
  image: python:3.6.6 
  tags:
    - docker         
  script:
    - pip install anybadge       # Installation de l'utilitaire anybadge
    - chmod +x genereBadges.sh   # Rendre le script exécutable
    - ./genereBadges.sh          # Script de génération des badges
    - anybadge -o -l "Dernier Test" -v "$(date)" -c "blue" -f "lastTest_badge.svg" #Generation du badge datant
  dependencies:         # Les badges sont générés à partir des rapports 
    - lint-js
    - lint-html
    - lint-css
  artifacts:
    when: always 
    paths:
    - badge_css_lint.svg  # et  mis à disposition pour mise en évidence sur la page du dépôt
    - badge_js_lint.svg
    - badge_html_lint.svg
    - lastTest_badge.svg

